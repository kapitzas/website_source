
---
title: "WorldClimTiles"
author: "Simon Kapitza"
date: "22/03/2019"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

I am regularly working with the WorldClim data set and in some cases had to download and merge the individual high res (0.5 arcmin) tiles for my work. To make things easier I made a little R package out of my workflow that does that really quickly and I will briefly discribe here with examples how it works. 

1. Download the package from GitHub:

```{r, message = FALSE, eval = FALSE}
devtools::install_github("kapitzas/WorldClimTiles")
```

2. Load the package and download a boundary file for France. France is a good example because it intersects with two WorldClim tiles.


```{r, message = FALSE}
require("WorldClimTiles")
require("raster")

#Download polygon feature for France
fra <- getData("GADM", country = "FRA", level = 0)
```

3. Get the [WorldClim tile names](https://gis.stackexchange.com/questions/263414/acquiring-and-understanding-data-from-world-clim tiles) that are intersected by the boundary shape of France.

```{r, message = FALSE}
#Get WorldClim tile names 
tilenames <- tile_name(fra)
tilenames
```

4. Download the two tiles ("`r tilenames`"). The default download path is the current working directory, but you can also specify a path. To exemplify, the two plotted rasters are of the bio1 variable.

```{r, message = FALSE}
#Download tiles
tiles <- tile_get(tilenames, "bio")
```

```{r plotting, echo = FALSE, message = FALSE}
#Plots of tiles[[1]][[1]] and tiles[[2]][[1]]
par(mfrow = c(1,2))
plot(tiles[[1]][[1]], main = paste0("Bio1, Tile ", tilenames[[1]]), legend=FALSE)
plot(tiles[[2]][[1]], main = paste0("Bio1, Tile ", tilenames[[2]]), legend=FALSE)
```

5. Merge the downloaded tiles layer by layer. The function produces a raster stack that contains the merged layers with the correct variable names.

```{r merging, eval=FALSE}
merged <- tile_merge(tiles)
```

After merging, bio1 looks like this:

```{r plotting2, echo = FALSE, message = FALSE}
merged <- tile_merge(list(tiles[[1]][[1]], tiles[[2]][[1]]))

#Plot of final merged object.
plot(merged, main = paste0("Bio1, merged tiles"), legend = FALSE)
```
